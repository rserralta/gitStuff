#include<stdlib.h>
#include<fcntl.h>
#include<time.h>
#include<stdio.h>
#include <unistd.h>

#define lrand() (rand() * 2147483648L + rand())
//This program receives a file name as its only command-line argument 
//It shuffles the content of the file randomly using low-level I/O
//Uses the following Unix system calls: read, write, open, lseek, close
int main(int argc, char* argv[]) {
	srand(time(NULL));//to initialize rand and lrand so that they can properly
						//generate random numbers.
	int fd = open(argv[1], O_RDWR);
	long file_size = lseek(fd, 0, SEEK_END);//find the file size
	fprintf(stderr, "The file size is %ld bytes!\n", file_size);
	lseek(fd, 0, SEEK_SET);//rewind
    /*
	for(long i = 0; i < file_size-1;i++){
		long loc = lrand()%(file_size - i) + i;//random number from i to file_size - 1
		fprintf(stderr, "Swapped chars at index %ld and %ld.\n", i, loc);
		char from, to;
		read(fd, &from,1);
		lseek(fd,loc,SEEK_SET);
		read(fd, &to, 1);
		lseek(fd,loc,SEEK_SET);
		write(fd, &from,1);
		lseek(fd,i,SEEK_SET);
		write(fd, &to,1);
	}
    */
    for(long i = 0; i < file_size / 2;i++){
		//long loc = lrand()%(file_size - i) + i;//random number from i to file_size - 1
		fprintf(stderr, "Swapped chars at index %ld and %ld.\n", i, file_size - 1 - i);
		char front, back;

        // READ
        lseek(fd, i, SEEK_SET);
        read(fd, &front, 1);
        lseek(fd, -(i + 1), SEEK_END);
        read(fd, &back, 1);

        // WRITE
        lseek(fd, i, SEEK_SET);
        write(fd, &back, 1);
        lseek(fd, -(i + 1), SEEK_END);
        write(fd, &front, 1);

		// read(fd, &front,1);
		// lseek(fd,i,SEEK_SET);
		// read(fd, &to, 1);
		// lseek(fd,loc,SEEK_SET);
		// write(fd, &from,1);
		// lseek(fd,i,SEEK_SET);
		// write(fd, &to,1);
	}
	close(fd);
}